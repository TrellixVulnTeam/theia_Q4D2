version: '2'
services:
  postgres:
    image: postgres:9.4
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - "POSTGRES_USER=theia"
      - "POSTGRES_PASSWORD=theia"

  redis:
    image: redis:5.0.3-stretch
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/usr/src/app
    environment:
      - DJANGO_ENV
      - USGS_USERNAME=something_secret_goes_here
      - USGS_PASSWORD=something_secret_goes_here
      - PANOPTES_PROD_CLIENT_ID
      - PANOPTES_PROD_CLIENT_SECRET
      - PANOPTES_PROD_URL
      - PANOPTES_STAGING_CLIENT_ID
      - PANOPTES_STAGING_CLIENT_SECRET
      - PANOPTES_STAGING_URL
      - STAGING_DB_USERNAME
      - STAGING_DB_PASSWORD
      - STAGING_DB_HOST
      - PANOPTES_CLIENT_ID
      - PANOPTES_CLIENT_SECRET
      - PANOPTES_URL
      - PANOPTES_PROD_USERNAME
      - PANOPTES_PROD_USER_KEY
    ports:
      - "8080:8080"
    links:
      - redis:redis
      - postgres:postgres

  worker:
    build:
      context: .
    command: bash ./start_worker.sh
    volumes:
      - ./:/usr/src/app
    environment:
      - DJANGO_ENV
      - USGS_USERNAME=something_secret_goes_here
      - USGS_PASSWORD=something_secret_goes_here
      - PANOPTES_PROD_CLIENT_ID
      - PANOPTES_PROD_CLIENT_SECRET
      - PANOPTES_PROD_URL
      - PANOPTES_STAGING_CLIENT_ID
      - PANOPTES_STAGING_CLIENT_SECRET
      - PANOPTES_STAGING_URL
      - STAGING_DB_USERNAME
      - STAGING_DB_PASSWORD
      - STAGING_DB_HOST
    links:
      - redis:redis
      - postgres:postgres

volumes:
  pgdata:
